@use '@abstracts/variables' as vars;
@use '@abstracts/mixins' as mix;

.header {
	background-color: #f9f9f9;
	padding-block: max(2.4rem, 16px);
	display: flex;
	align-items: center;
	justify-content: space-between;
	@include mix.spacing(padding, 'small');
	@media screen and (max-width: vars.$bp-small-mobile) {
		background-color: transparent;
	}
	&__nav {
		display: flex;
		gap: max(2.6rem, 10px);
		@media screen and (max-width: 650px) {
			display: none;
		}
	}
	&__link {
		position: relative;
		display: block;
		@for $i from 1 through 5 {
			&:nth-child(#{$i}) {
				animation: 0.5s backwards;
				animation-delay: 0.1s * ($i - 1) + 0.15s;
				@if ($i % 2 == 0) {
					animation-name: slide-from-top-10;
				} @else {
					animation-name: slide-from-bottom-10;
				}
			}
		}
		&::before,
		&::after {
			content: '';
			position: absolute;
			width: 100%;
			height: 1px;
			background: currentColor;
			top: 100%;
			left: 0;
			pointer-events: none;
		}
		&::before {
			transform-origin: 100% 50%;
			transform: scale3d(0, 1, 1);
			transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
		}
		&::after {
			top: calc(100% + 4px);
			transform-origin: 0% 50%;
			transform: scale3d(0, 1, 1);
			transition: transform 0.3s cubic-bezier(0.7, 0, 0.2, 1);
		}
		&:hover {
			&::before {
				transform-origin: 0% 50%;
				transform: scale3d(1, 1, 1);
				transition-timing-function: cubic-bezier(0.4, 1, 0.8, 1);
			}
			&::after {
				transform-origin: 100% 50%;
				transform: scale3d(1, 1, 1);
				transition-timing-function: cubic-bezier(0.4, 1, 0.8, 1);
			}
		}
	}
	&__logo {
		width: max(14.8rem, 147px);
		border-radius: 1rem;
		animation: slide-from-left-20 0.5s;
		&:hover {
			transform: translateY(-5px);
			background-color: rgba(vars.$primary-500, 0.06);
		}
	}
	&__button {
		align-self: stretch;
		animation: slide-from-right-20 0.5s backwards 0.35s;
		@media screen and (max-width: 650px) {
			display: none;
		}
	}
}
